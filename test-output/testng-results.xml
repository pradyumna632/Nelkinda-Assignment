<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="3" passed="3" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-05-06T15:42:34 IST" name="Default suite" finished-at="2024-05-06T15:42:34 IST" duration-ms="279">
    <groups>
    </groups>
    <test started-at="2024-05-06T15:42:34 IST" name="Default test" finished-at="2024-05-06T15:42:34 IST" duration-ms="279">
      <class name="com.nelkinda.FactorialTest">
        <test-method signature="testFactorialOfNegativeNumber()[pri:0, instance:com.nelkinda.FactorialTest@16d04d3d]" started-at="2024-05-06T15:42:34 IST" name="testFactorialOfNegativeNumber" finished-at="2024-05-06T15:42:34 IST" duration-ms="39" status="PASS">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Factorial is not defined for negative numbers]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Factorial is not defined for negative numbers
at com.nelkinda.Factorial.calculateFactorial(Factorial.java:7)
at com.nelkinda.FactorialTest.testFactorialOfNegativeNumber(FactorialTest.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFactorialOfNegativeNumber -->
        <test-method signature="testFactorialOfPositiveNumber()[pri:0, instance:com.nelkinda.FactorialTest@16d04d3d]" started-at="2024-05-06T15:42:34 IST" name="testFactorialOfPositiveNumber" finished-at="2024-05-06T15:42:34 IST" duration-ms="17" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFactorialOfPositiveNumber -->
        <test-method signature="testFactorialOfZero()[pri:0, instance:com.nelkinda.FactorialTest@16d04d3d]" started-at="2024-05-06T15:42:34 IST" name="testFactorialOfZero" finished-at="2024-05-06T15:42:34 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFactorialOfZero -->
      </class> <!-- com.nelkinda.FactorialTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
